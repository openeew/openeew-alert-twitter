# This workflow will build a docker container, publish it to IBM Container Registry,
# and deploy it to an existing IKS cluster
name: Build and Deploy to IKS

on:
  push: # Execute on every push to the main branch. Merging a pull request counts as a push.
    branches:
      - main
  release: # Execute when a release is created on the main branch
    types:
      - created

env:
  DEPLOYMENT_NAME: twitter-alert-staging

jobs:
  build-push-deploy-job:
    runs-on: ubuntu-latest
    name: Checkout and build-push-deploy to Kubernetes
    steps:
      - uses: actions/checkout@v2

      # If this action is triggered by a release, we will deploy to the production site
      - name: Set environment variables for a release
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        run: |
          echo "DEPLOYMENT_NAME=twitter-alert-production" >> $GITHUB_ENV
      # Turnstyle ensures that this job only runs one at a time in this repository
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: call-for-code/build-push-deploy@v2
        with:
          cloud-api-key: ${{ secrets.IBM_CLOUD_API_KEY }}
          cloud-resource-group: OpenEEW-Infra
          cloud-region: us-south
          container-name: twitter-alert
          deployment-name: ${{ env.DEPLOYMENT_NAME }}
          github-sha: ${{ github.sha }}
          icr-namespace: openeew-alerts
          image-name: twitter-alert-gha
          k8s-cluster-name: ${{ secrets.K8S_CLUSTER_NAME }}
          k8s-cluster-namespace: ${{ secrets.K8S_CLUSTER_NAMESPACE }}
          registry-hostname: us.icr.io
          working-directory: "."
